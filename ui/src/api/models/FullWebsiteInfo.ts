/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProjectInfo,
    ProjectInfoFromJSON,
    ProjectInfoFromJSONTyped,
    ProjectInfoToJSON,
} from './';

/**
 * 
 * @export
 * @interface FullWebsiteInfo
 */
export interface FullWebsiteInfo {
    /**
     * 
     * @type {string}
     * @memberof FullWebsiteInfo
     */
    firstParagraphOfAboutMe: string;
    /**
     * 
     * @type {string}
     * @memberof FullWebsiteInfo
     */
    secondParagraphOfAboutMe: string;
    /**
     * 
     * @type {string}
     * @memberof FullWebsiteInfo
     */
    listOfTechnicalLanguages: string;
    /**
     * 
     * @type {string}
     * @memberof FullWebsiteInfo
     */
    listOfFrameworks: string;
    /**
     * 
     * @type {string}
     * @memberof FullWebsiteInfo
     */
    listOfTools: string;
    /**
     * 
     * @type {string}
     * @memberof FullWebsiteInfo
     */
    listOfLanguages: string;
    /**
     * 
     * @type {string}
     * @memberof FullWebsiteInfo
     */
    resumePath: string;
    /**
     * 
     * @type {string}
     * @memberof FullWebsiteInfo
     */
    id: string;
    /**
     * 
     * @type {Array<ProjectInfo>}
     * @memberof FullWebsiteInfo
     */
    readonly projectInfoList: Array<ProjectInfo>;
}

export function FullWebsiteInfoFromJSON(json: any): FullWebsiteInfo {
    return FullWebsiteInfoFromJSONTyped(json, false);
}

export function FullWebsiteInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullWebsiteInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'firstParagraphOfAboutMe': json['firstParagraphOfAboutMe'],
        'secondParagraphOfAboutMe': json['secondParagraphOfAboutMe'],
        'listOfTechnicalLanguages': json['listOfTechnicalLanguages'],
        'listOfFrameworks': json['listOfFrameworks'],
        'listOfTools': json['listOfTools'],
        'listOfLanguages': json['listOfLanguages'],
        'resumePath': json['resumePath'],
        'id': json['id'],
        'projectInfoList': ((json['projectInfoList'] as Array<any>).map(ProjectInfoFromJSON)),
    };
}

export function FullWebsiteInfoToJSON(value?: FullWebsiteInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'firstParagraphOfAboutMe': value.firstParagraphOfAboutMe,
        'secondParagraphOfAboutMe': value.secondParagraphOfAboutMe,
        'listOfTechnicalLanguages': value.listOfTechnicalLanguages,
        'listOfFrameworks': value.listOfFrameworks,
        'listOfTools': value.listOfTools,
        'listOfLanguages': value.listOfLanguages,
        'resumePath': value.resumePath,
        'id': value.id,
    };
}


