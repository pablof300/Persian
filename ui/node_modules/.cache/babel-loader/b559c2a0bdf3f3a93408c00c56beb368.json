{"ast":null,"code":"var _jsxFileName = \"/Users/pabloestrada/Desktop/PersonalWebsite/ui/src/components/BaseComponent/BaseComponent.tsx\";\nimport React from 'react';\nimport styles from './BaseComponent.module.css';\nimport { PersonalWebsiteApi } from '../../api/index';\nimport { Grid, Segment } from 'semantic-ui-react';\nexport class BaseComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.api = new PersonalWebsiteApi();\n    this.state = {\n      count: 0,\n      developerName: \"\"\n    };\n    this.getDeveloperName = this.getDeveloperName.bind(this);\n    this.getDeveloperName();\n  }\n\n  async getDeveloperName() {\n    this.api.getDeveloperName().then(devName => {\n      this.setState({\n        developerName: devName\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: styles.MainCard,\n      padded: \"very\",\n      piled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Very padded content.\"))), React.createElement(\"p\", {\n      className: styles.Text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Hello \", this.props.name, \"! The count is \", this.state.count, \" and the developer name is \", this.state.developerName));\n  }\n\n}","map":{"version":3,"sources":["/Users/pabloestrada/Desktop/PersonalWebsite/ui/src/components/BaseComponent/BaseComponent.tsx"],"names":["React","styles","PersonalWebsiteApi","Grid","Segment","BaseComponent","Component","constructor","props","api","state","count","developerName","getDeveloperName","bind","then","devName","setState","render","MainCard","Text","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,IAAT,EAAsBC,OAAtB,QAAqC,mBAArC;AAaA,OAAO,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA0D;AAG/DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AADwB,SAFlBC,GAEkB,GAFQ,IAAIP,kBAAJ,EAER;AAExB,SAAKQ,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,aAAa,EAAE;AAA3B,KAAb;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKD,gBAAL;AACD;;AAED,QAAMA,gBAAN,GAAyB;AACvB,SAAKJ,GAAL,CAASI,gBAAT,GAA4BE,IAA5B,CAAiCC,OAAO,IAAI;AAC1C,WAAKC,QAAL,CAAc;AAAEL,QAAAA,aAAa,EAAEI;AAAjB,OAAd;AACD,KAFD;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE,0CACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEjB,MAAM,CAACkB,QAA3B;AAAqC,MAAA,MAAM,EAAC,MAA5C;AAAmD,MAAA,KAAK,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAFF,CADA,EAOE;AAAG,MAAA,SAAS,EAAElB,MAAM,CAACmB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACS,KAAKZ,KAAL,CAAWa,IADpB,qBACyC,KAAKX,KAAL,CAAWC,KADpD,iCACsF,KAAKD,KAAL,CAAWE,aADjG,CAPF,CADF;AAcD;;AA/B8D","sourcesContent":["import React from 'react';\nimport styles from './BaseComponent.module.css'\nimport { PersonalWebsiteApi } from '../../api/index'\nimport { Grid, Image, Segment } from 'semantic-ui-react'\n\nimport { ReactLogo } from '../ReactLogo/index'\n\ninterface Props {\n  name: string\n}\n\ninterface State {\n  count: number\n  developerName: string\n}\n\nexport class BaseComponent extends React.Component<Props, State> {\n  private api: PersonalWebsiteApi = new PersonalWebsiteApi()\n\n  constructor(props: Props) {\n    super(props)\n    this.state = { count: 0, developerName: \"\" }\n    this.getDeveloperName = this.getDeveloperName.bind(this);\n    this.getDeveloperName()\n  }\n\n  async getDeveloperName() {\n    this.api.getDeveloperName().then(devName => {\n      this.setState({ developerName: devName })\n    })\n  }\n\n  render() {\n    return (\n      <>\n      <Grid>\n        <Grid.Column width={4} />\n        <Grid.Column width={8}>\n          <Segment className={styles.MainCard} padded='very' piled >Very padded content.</Segment>\n        </Grid.Column>\n      </Grid>\n        <p className={styles.Text}>\n          Hello {this.props.name}! The count is {this.state.count} and the developer name is {this.state.developerName}\n        </p>\n\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}